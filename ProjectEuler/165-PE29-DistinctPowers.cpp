//PE 29: Distinct Powers
//Problem: Find the different values generated by a^b for 2 <= a, b <= 100.
//Solution: We can bruteforce the solution by making a set with the powers, and then getting the amount of elements.
//Note that we have to use doubles, since 100^100 wont fit in a long long.
//We don't have to worry about floating point errors, given how pow() works.
//Runtime: O(n^2 log n) (Note that O(n^2 log (n^2)) is still O(n^2 log n))
#include "EulerUtils.hpp"

long long solve() {
    set<double> used;
    for (int a = 2; a <= 100; a++) {
        for (int b = 2; b <= 100; b++) {
            used.insert(pow((double)a, (double)b));
        }
    }

    return (long long)used.size();
}

int main() {
    cout << solve() << '\n';
}
